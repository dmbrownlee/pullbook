---
- name: Generic pullbook
  hosts: localhost
  vars_files:
    - /root/ansible-pull.vars
  tasks:
    - name: Ensure private group for local admin user exists
      ansible.builtin.group:
        name: "{{ username }}"
        gid: "{{ gid | default(omit) }}"
      when: username is defined
    - name: Ensure local admin user is configured
      ansible.builtin.user:
        name: "{{ username }}"
        comment: "{{ gecos | default(omit) }}"
        uid: "{{ uid | default(omit) }}"
        group: "{{ username }}"
        shell: /bin/bash
        password: "{{ password  | password_hash('sha512') | default(omit) }}"
        update_password: on_create
      when: username is defined
    - name: Ensure local user can sudo
      ansible.builtin.copy:
        dest: /etc/sudoers.d/{{ username }}
        content: "{{ username }} ALL=(ALL:ALL) ALL"
        owner: root
        group: root
        mode: '0440'
    - name: Ensure local admin user has an SSH config directory
      ansible.builtin.file:
        path: /home/{{ username }}/.ssh
        state: directory
        owner: "{{ username }}"
        group: "{{ username }}"
        mode: '0700'
      when:
        - username is defined
        - key is defined
    - name: Ensure local admin user's SSH key is authorized
      ansible.builtin.lineinfile:
        path: /home/{{ username }}/.ssh/authorized_keys
        line: "{{ key }}"
        owner: "{{ username }}"
        group: "{{ username }}"
        mode: '0600'
        create: true
      when:
        - username is defined
        - key is defined
    - name: Ensure local user has a .profile that sources .bashrc
      ansible.builtin.blockinfile:
        path: /home/{{ username }}/.profile
        block: |
          if [ -n "$BASH_VERSION" ]; then
            if [ -f "$HOME/.bashrc" ]; then
              . "$HOME/.bashrc"
            fi
          fi
        owner: "{{ username }}"
        group: "{{ username }}"
        mode: '0644'
        create: true
      when:
        - username is defined
    - name: Ensure local user has a .bashrc with aliases
      ansible.builtin.blockinfile:
        path: /home/{{ username }}/.bashrc
        block: |
          if [[ -x /usr/bin/kubectl ]]; then
            source <(kubectl completion bash)
            alias k="kubectl"
            complete -o default -F __start_kubectl k
          fi
          if [[ -x /usr/local/bin/helm ]]; then
            source <(helm completion bash)
          fi
          if [[ -x /usr/local/bin/kubectl-cnpg ]]; then
            alias kc=kubectl-cnpg
            source <(kubectl-cnpg completion bash)
            complete -o default -F __start_kubectl-cnpg kc
          fi
          export KUBECONFIG=.kube/config
          echo KUBECONFIG: $KUBECONFIG
          alias ta='tofu apply -var-file $(tofu workspace show).tfvars -parallelism=1'
          alias td='tofu destroy -var-file $(tofu workspace show).tfvars'
          alias tsl='tofu state list'
          alias twl='tofu workspace list'
          alias tws='tofu workspace select'
          alias kws='ln -sf $(tofu workspace show).kubeconfig .kube/config'
          alias ap='ansible-playbook -e tf_workspace=$(tofu workspace show) ansible/playbook.yml'
          alias pb='ansible-playbook -e tf_workspace=$(tofu workspace show)'
          alias pbv='ansible-playbook -vvv -e tf_workspace=$(tofu workspace show)'
          alias pbs='ansible-playbook --step -e tf_workspace=$(tofu workspace show)'
          alias kubereconfig='ansible-playbook -e tf_workspace=$(tofu workspace show) ansible/playbook-update-local-kubeconfig.yml'
          alias vim=nvim
          alias vimdiff='nvim -d'
        owner: "{{ username }}"
        group: "{{ username }}"
        mode: '0644'
        create: true
      when:
        - username is defined
    - name: Ensure the public key for ansible exists
      ansible.builtin.shell:
      args:
        cmd: grep ansible authorized_keys > ansible.pub
        chdir: /home/{{ username }}/.ssh
        creates: /home/{{ username }}/.ssh/ansible.pub
      register: ansible_pub_key
      when:
        - username is defined
    - name: Ensure the public key for ansible has correct ownership
      ansible.builtin.file:
        path: /home/{{ username }}/.ssh/ansible.pub
        owner: "{{ username }}"
        group: "{{ username }}"
        mode: '0600'
      when:
        - ansible_pub_key.changed
